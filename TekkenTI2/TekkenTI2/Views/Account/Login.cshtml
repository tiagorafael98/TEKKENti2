@using TekkenTI2.Models
@model LoginViewModel
@{
    ViewBag.Title = "Efetuar login";
}

@* imagem de fundo *@
<style>
    body {
        background-image: url(../../FundoPersonagens/Fundo3.jpg);
    }

    .button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 14px;
        cursor: pointer;
        text-align: center;
        font-family: 'Lucida Console';
        color: black;
        background-color: white;
        border: blue;
        border-radius: 12px;
        border: 2px solid #191970;
    }

        .button:hover {
            background-color: #D3D3D3
        }

        .button:active {
            background-color: #A9A9A9;
            transform: translateY(2px);
        }
</style>

<div style="font-family:'Lucida Console'; font-size:35px; color:white; margin-top:20px;">@ViewBag.Title.</div>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="alert alert-info" style="font-family:'Lucida Console'; font-size:15px; width:55%;">
                    <strong> Efetue o login com uma conta registada.</strong>
                </div> <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group" style="font-family:'Lucida Console'; color:white;">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" style="font-family:'Lucida Console'; color:white;">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox" style="font-family:'Lucida Console'; color:white">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Efetuar login" class="button" />
                    </div>
                </div>
                @*Botão para voltar à lista de Jogos*@
                <div class="btn-group" role="group" style="margin-bottom:9px; padding-left: 129px;">
                    <button type="button" class="button" onclick="location.href='@Url.Action("Register","Account")'">Registrar-se como novo usuário.</button>
                </div>
                @* Ativar isso assim que você tiver a confirmação de conta ativada para a funcionalidade de redefinição de senha
                    <p>
                        @Html.ActionLink("Esqueceu sua senha?", "ForgotPassword")
                    </p>*@
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}